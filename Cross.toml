#[build]
#pre-build = [
#    "dpkg --add-architecture $CROSS_DEB_ARCH",
#    "apt-get update && apt-get --assume-yes install libssl-dev:$CROSS_DEB_ARCH",
#]

[target.i686-unknown-linux-gnu]
pre-build = [
    "dpkg --add-architecture $CROSS_DEB_ARCH",
    "apt-get update && apt-get --assume-yes install libssl-dev:$CROSS_DEB_ARCH",
]

[target.aarch64-unknown-linux-gnu]
pre-build = [
    "dpkg --add-architecture $CROSS_DEB_ARCH",
    "apt-get update && apt-get --assume-yes install libssl-dev:$CROSS_DEB_ARCH",
]

[target.x86_64-unknown-linux-gnu]
pre-build = [
    "dpkg --add-architecture $CROSS_DEB_ARCH",
    "apt-get update && apt-get --assume-yes install libssl-dev:$CROSS_DEB_ARCH",
]

[target.armv7-unknown-linux-gnueabihf]
#image = "ghcr.io/cross-rs/armv7-unknown-linux-gnueabihf:0.2.4 "
pre-build = [
    "dpkg --add-architecture $CROSS_DEB_ARCH",
    "apt-get update && apt-get --assume-yes install libssl-dev:$CROSS_DEB_ARCH",
]

# [target.arm-unknown-linux-gnueabi] # Instead, we will use `openssl vendored`.
# pre-build = [
#     "dpkg --add-architecture $CROSS_DEB_ARCH",
#     "apt-get update && apt-get --assume-yes install libssl-dev:$CROSS_DEB_ARCH gcc-arm-linux-gnueabihf",
# ]
